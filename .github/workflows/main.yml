name: Build project
on: [push]
jobs:
  requestManualActivationFile:
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v1

      # Request manual activation file
      - name: Request manual activation file
        uses: webbertakken/unity-request-manual-activation-file@v1
        id: getManualLicenseFile

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  requestActivation:
    name: Request activation âœ”
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v1

      # Activate Unity
      - name: Unity - Activate
        uses: webbertakken/unity-activate@v1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  buildForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - /tanks-contest
        unityVersion:
          - 2019.2.17f1
        targetPlatform:
          - StandaloneWindows
    steps:
      - uses: actions/checkout@v1
      - uses: webbertakken/unity-activate@v1
      - uses: webbertakken/unity-builder@v0.3
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: webbertakken/unity-return-license@v1
        if: always()
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build
